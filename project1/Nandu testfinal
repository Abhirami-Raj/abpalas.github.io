<!DOCTYPE html>
<html>
<head>
	<title>Project 1 - sample code 2</title>
	<script type="text/javascript" src="https://d3js.org//d3.v3.min.js"></script>
	<script src="//d3js.org/d3.v4.js"></script>
	<style>
    	text { 
			font-family: Arial; 
			font-size: 15px;
		}
		.axis path, .axis line {
			fill: none;
			stroke: black;
			shape-rendering: crispEdges;
		}
		.tick text {
			fill: black;
			font-size: 11px;
		}

		rect {
			stroke: white;
		}
	</style>
</head>
<body>
<div class="row">
	  <h3>&nbsp Dr. John Snow's Map of London's 1854 cholera epidemic &nbsp&nbsp&nbsp&nbsp&nbsp <a href=documentation.html>Documentation<html></html></h3>
  </div>
<class="container-fluid">
  

  <div class="row">
	<div class="col-lg-8" id="main_panel">
	</div>
  </div>
</div>
	

	
	<script>
	var width = 600
	var height = 600
	var streets=[];
      var svgContainer = d3.select("#main_panel")
      .append("svg")
      .attr("width", width)
      .attr("height", height)//.style("border", "0.5px solid #C0C0C0")
      .attr("x", "20px")
      .attr("y", "20px")
      //.call(d3.zoom().on("zoom", function() {svgContainer.attr("transform", d3.event.transform)}))
      .append("g");
	
	//To draw street map  
	
	d3.json('data/streets.json',function(error, streets) {
				streets.forEach(function(data){
					
					var lineCoords=d3.svg.line()
					.x(function(d) {return d.x*30;})
					.y(function(d) {return height-d.y*30;})
					.interpolate("linear"); 
					
			lineCoords(data);
	 // set projection
	
    //var projection = d3.geoMercator().scale(1200).center([ 20, 8.5 ])

    // set projection parameters
    //projection.scale(1200).center([ 20, 8.5 ])
	// create path variable
    //var geoPath = d3.geoPath().projection(projection);

			var svgPath = svgContainer
				//.attr("d", geoPath(lineCoords)).style("stroke", "#1c9099").attr("vector-effect", "non-scaling-stroke")
				//.attr("x", "-20px")
				//.attr("y", "20px")
				.append("path")
				.attr('stroke', 'grey')
    			.attr('stroke-width', '3px')
				.attr("fill", "none");
			svgPath.attr("d", lineCoords(data));
			
			});
		});
		
	//To insert pumps
	var g = d3.select('svgContainer').select('g');
	
	d3.csv('data/pumps.csv',function(error, pumps) {
	
					
				   svgContainer.selectAll("circle")
					.data(pumps)
					.enter().append("circle")
					.attr("cx", function(d) { return d.x*30; })
					.attr("cy", function(d) { return height-d.y*30; })
					//var svgpump = svgContainer
					//.append('circle')
					.style('fill', 'red')
					.attr('r', 7)
					.attr("stroke", 'grey')
					.attr("stroke-opacity",0.8);
				//svgpump.attr("d", pumpcoords(data))
					//.attr('cx', function(d) {return d.x*30; })
					//.attr('cx', function(d) {return height-d.y*30; });
					});
					
	//To insert victims
	
	var g = d3.select('svgContainer').select('g');
	
	d3.csv('data/deaths_age_sex.csv',function(error, victims) {
	
					
				   svgContainer.selectAll("rect")
					.data(victims)
					.enter()
					.append("rect")
					.attr("x", function(d) { return d.x*30; })
					.attr("y", function(d) { return height-d.y*30; })
					//var svgpump = svgContainer
					//.append('circle')
					.attr('width', 5)
					.attr('height',7)
					.style('fill', function(d)
					  {
						if(d.gender == "0")
						{return "blue";}
						else
						{return "lime";}
					  }
					)
					//.style('fill', 'green')
					//.attr('r', 10)
					.attr("stroke", 'steelblue')
					.attr("stroke-opacity",0.8);
				//svgpump.attr("d", pumpcoords(data))
					//.attr('cx', function(d) {return d.x*30; })
					//.attr('cx', function(d) {return height-d.y*30; });
					});
					
	/*d3.csv('data/pumps.csv',function(error, pumps) {
				pumps.forEach(function(data){
				
					var  pumpcoords=d3.svg.line()
					.x(function(d) {return d.x*30;})
					.y(function(d) {return height-d.y*30;});
					
				pumpcoords(data);
				
				var svgpump = svgContainer
					.append('circle')
					.style('fill', 'red')
					.attr('r', 10)
				svgpump.attr("d", pumpcoords(data));	
				
				});
		}); */
	/*d3.csv('data/pumps.csv',function(error, pump) {	
		var pumpcoords = {
		type : "MultiPoint",
		coordinates : []
	}

	for (i = 0; i < pump.length; i++) {

		pumpcoords.coordinates.push(pump[i]);

  }
  markPumps(pumpcoords);
  });
  
  function markPumps(pumpcoords) {

	// set projection
	var projection = d3.geoMercator();

	// set projection parameters
	projection.scale(1200).center([ 20,8.5])

	// create path variable
	var geoPath = d3.geoPath().projection(projection).pointRadius(10);

  svgContainer.append("path")
      //.attr("d", geoPath(pumpcoords))
	  .attr("d",pumpcoords(pump))
      .attr("fill", "red")
      .call(d3.zoom().on("zoom", function() {svgContainer.attr("transform", d3.event.transform)}))
	  .append("g")
	
}*/
/*	//To insert pumps	
	var pumps =[];
	d3.csv('data/pumps.csv',function(data) {
	//pumps.data(function(data){
		for (var i=0; i< data.length; i++)
			{
				var record = data[i];
				
				// loop through all values, from 0 to 20
				for (var j=0; j<=20; j++) 
				{
					var value = record[j];
					var object = {
					
						x: d.x*30,
						y: height-d.y*30 //+value
					};
				pumps.push(object);
					//var pumpCoords = d3.svg.circle()
					//.x(function(d) {return d.x*30;})
					//.y(function(d) {return height-d.y*30;})
					//.interpolate("circular"); 
				};
			//data = [].concat.apply([], data);
			//console.log(data.length);   
			//var len = data.length;
			
				var svgCircle = svgContainer
				.append("circle")
				.attr('stroke', 'steelblue')
    			.attr('stroke-width', '3px')
				.attr("fill", "none");
			svgCircle.attr("d", object(data));
					//pumpCoords(data);
			}
				drawScatterPlot();
			});
		//});
	function drawScatterPlot() 
		{	
			var maxValue = d3.max(pumps);
			
			var g = d3.select('svg').select('g');
	
			g.selectAll('circle')
    			.data(pumps)
    			.enter()
    			.append('circle')
    			.style('fill', 'black')
    			.attr('r', 5)
    			.attr('cx', function(d) { return d.x})
    			.attr('cy', function(d) { return d.y});
			
		} */
		
		
</script>
				
</body>
</html>